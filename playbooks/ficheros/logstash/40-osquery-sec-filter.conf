filter {
       date {
            match => [ "unixTime", "UNIX" ]
            }
       mutate {
              gsub => [
                      "[columns][data]", "\\x0A", " "
                      ]
              }
       json {
            source => "[columns][data]"
            #target => "data"
            }
       mutate {
              remove_field => [ "[columns][data]", "[EventData][Name]", "[EventData][<xmlattr>]" ]
              }
       if [type] == "sec_alerts" {
                                 date {
                                      match => [ "timestamp" , "yyyy/mm/dd:hh:mm:ss" ]
                                      }
        	} else if [type] == "linux_auth" {
			grok {
               			match => { "message" => ".*%{SYSLOGTIMESTAMP} %{SYSLOGHOST} (?<process>.*?)\[(?<pid>.*?)\]: (Accepted password for|Failed password for invalid user) (?<username>.*?) from (?<source_ip>.*?) port.*" }
               			overwrite => "message"
		        }
	
		}
      }
